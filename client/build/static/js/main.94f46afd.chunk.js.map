{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/store.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","CLEAR_CART","TOGGLE_CART","initialState","products","categories","currentCategory","cart","cartOpen","reducers","state","action","type","product","map","_id","purchaseQuantity","newState","filter","length","createStore","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","dispatch","useDispatch","useSelector","image","price","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CATEGORIES","QUERY_USER","QUERY_CHECKOUT","ProductList","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","value","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","Menu","pointing","inverted","Item","position","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","client","ApolloClient","operation","setContext","headers","authorization","uri","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.94f46afd.chunk.js","sourcesContent":["export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const TOGGLE_CART = 'TOGGLE_CART';\n\n","import {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nconst initialState = {\n  products: [],\n  categories: [],\n  currentCategory: '',\n  cart: [],\n  cartOpen: false\n};\n\nexport const reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducers;","import { createStore } from 'redux';\nimport reducers from './reducers';\n\nexport default createStore(reducers);","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;","import gql from 'graphql-tag';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from \"react\";\nimport ProductItem from \"../ProductItem\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from \"../../assets/spinner.gif\"\n\nfunction ProductList() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if(data) {\n      dispatch({\n           type: UPDATE_PRODUCTS,\n          products: data.products\n        });\n        data.products.forEach((product) => {\n          idbPromise('products', 'put', product);\n        });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n         products: products\n       });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n            {filterProducts().map(product => (\n                <ProductItem\n                  key= {product._id}\n                  _id={product._id}\n                  image={product.image}\n                  name={product.name}\n                  price={product.price}\n                  quantity={product.quantity}\n                />\n            ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      { loading ? \n      <img src={spinner} alt=\"loading\" />: null}\n    </div>\n  );\n}\n\nexport default ProductList;","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map(item => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { QUERY_CHECKOUT } from \"../../utils/queries\"\nimport { idbPromise } from \"../../utils/helpers\"\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport \"./style.css\";\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session })\n      })\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    };\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds }\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span\n          \n          aria-label=\"trash\">Cart</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>[close]</div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map(item => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {\n              Auth.loggedIn() ?\n                <button onClick={submitCheckout}>\n                  Checkout\n              </button>\n                :\n                <span>(log in to check out)</span>\n            }\n          </div>\n        </div>\n      ) : (\n          <h3>\n          You haven't added anything to your cart yet!\n          </h3>\n        )}\n    </div>\n  );\n};\n\nexport default Cart;","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\n\nimport Cart from \"../components/Cart\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from \"../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from '../assets/spinner.gif'\n\nfunction Detail() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } \n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n\n    }\n  }\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">\n            ← Back to Products\n          </Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>\n            {currentProduct.description}\n          </p>\n\n          <p>\n            <strong>Price:</strong>\n            ${currentProduct.price}\n            {\" \"}\n            <button onClick={addToCart}>\n              Add to Cart\n            </button>\n            <button \n              disabled={!cart.find(p => p._id === currentProduct._id)} \n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {\n        loading ? <img src={spinner} alt=\"loading\" /> : null\n      }\n      <Cart />\n    </>\n  );\n};\n\nexport default Detail;","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\"\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' })\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">\n        ← Go to Signup\n      </Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {\n          error ? <div>\n            <p className=\"error-text\" >The provided credentials are incorrect</p>\n          </div> : null\n        }\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\n\nexport default Login;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        firstName: formState.firstName, lastName: formState.lastName\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">\n        ← Go to Login\n      </Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n}\n\nexport default Signup;","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport {  Menu } from \"semantic-ui-react\";\n<ul className=\"flex-row\">\n  <li className=\"mx-1\">\n    <Link to=\"/orderHistory\">\n      Order History\n  </Link>\n  </li>\n  <li className=\"mx-1\">\n    {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n    <a href=\"/\" onClick={() => Auth.logout()}>\n      Logout\n  </a>\n  </li>\n</ul>\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <Menu.Menu position='right'>\n          <Menu.Item\n            name='logout'\n            onClick={() => Auth.logout()}\n\n          />\n          <Link to=\"/orderHistory\"><Menu.Item\n            name='Order Details'\n          />\n          </Link>\n\n        </Menu.Menu>\n      );\n    } else {\n      return (\n        <>\n          <Link to=\"/signup\"><Menu.Item\n            name='Signup' /></Link>\n\n          <Link to=\"/login\"> <Menu.Item\n            name='Login'\n          /></Link>\n        </>\n\n      );\n    }\n  }\n\n  return (\n    <div>\n \n      <Menu pointing inverted>\n        <Link to=\"/\"><Menu.Item\n          name='Home'\n          \n        /></Link>\n        {showNavigation()}\n      \n      <Link to=\"/AboutUs\"><Menu.Item\n        name='About'\n        />\n      \n      </Link>\n\n\n\n      </Menu>\n\n\n    </div >\n\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Jumbotron from \"../components/Jumbotron\";\nimport { ADD_ORDER } from \"../utils/mutations\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map(item => item._id);\n      \n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n    \n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n        \n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>\n          Thank you for your purchase!\n        </h2>\n        <h2>\n          You will now be redirected to the home page\n        </h2>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Success;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_USER } from \"../utils/queries\";\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">\n          ← Back to Products\n          </Link>\n\n        {user ? (\n          <>\n            <h2>Order History for {user.firstName} {user.lastName}</h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>{new Date(parseInt(order.purchaseDate)).toLocaleDateString()}</h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img\n                          alt={name}\n                          src={`/images/${image}`}\n                        />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n\n      </div>\n\n    </>)\n\n};\n\nexport default OrderHistory;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\n\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport Success from \"./pages/Success\";\nimport OrderHistory from \"./pages/OrderHistory\";\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token')\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    })\n  },\n  uri: '/graphql',\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import 'semantic-ui-css/semantic.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}